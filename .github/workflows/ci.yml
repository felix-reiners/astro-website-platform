name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Run unit tests
        run: npm run test:unit

      - name: Generate coverage report
        if: matrix.node-version == '20.x'
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Build project
        run: npm run build

      - name: Check performance budget
        run: npm run perf:check

      - name: Upload build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium firefox webkit

      - name: Build project
        run: npm run build

      - name: Run E2E tests
        run: npm run test:e2e
        continue-on-error: true
        id: e2e_tests

      - name: Run visual regression tests
        run: npm run test:visual
        continue-on-error: true
        id: visual_tests

      - name: Run component tests
        run: npm run test:components
        continue-on-error: true
        id: component_tests

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: test-results/playwright-report/
          retention-days: 30

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/
          retention-days: 30

      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-screenshots
          path: test-results/**/*.png
          retention-days: 30

      - name: Upload videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-videos
          path: test-results/**/*.webm
          retention-days: 7

      - name: Generate test summary
        if: always()
        run: |
          echo "## 🎭 Playwright Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Status" >> $GITHUB_STEP_SUMMARY
          echo "- E2E Tests: ${{ steps.e2e_tests.outcome }}" >> $GITHUB_STEP_SUMMARY
          echo "- Visual Tests: ${{ steps.visual_tests.outcome }}" >> $GITHUB_STEP_SUMMARY
          echo "- Component Tests: ${{ steps.component_tests.outcome }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 [View detailed HTML report in artifacts](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY

      - name: Comment PR with test results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const e2eStatus = '${{ steps.e2e_tests.outcome }}';
            const visualStatus = '${{ steps.visual_tests.outcome }}';
            const componentStatus = '${{ steps.component_tests.outcome }}';

            const statusEmoji = (status) => status === 'success' ? '✅' : status === 'failure' ? '❌' : '⚠️';

            const comment = `## 🎭 Playwright Test Results

            ### Test Status
            ${statusEmoji(e2eStatus)} **E2E Tests**: ${e2eStatus}
            ${statusEmoji(visualStatus)} **Visual Regression Tests**: ${visualStatus}
            ${statusEmoji(componentStatus)} **Component Tests**: ${componentStatus}

            ### 📊 Reports
            - [View HTML Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - Screenshots and videos available in artifacts

            ${visualStatus === 'failure' ? '⚠️ **Visual changes detected** - Review screenshots in artifacts to verify if changes are intentional.' : ''}
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Fail if tests failed
        if: steps.e2e_tests.outcome == 'failure' || steps.visual_tests.outcome == 'failure' || steps.component_tests.outcome == 'failure'
        run: exit 1

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint
        continue-on-error: true
