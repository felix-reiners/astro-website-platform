---
export interface PricingTier {
  name: string;
  price: number | string;
  period?: string;
  description?: string;
  features: string[];
  highlighted?: boolean;
  ctaText?: string;
  ctaHref?: string;
}

export interface Props {
  tiers: PricingTier[];
  businessType?: 'app-marketing' | 'consulting';
  currency?: string;
  class?: string;
}

const { 
  tiers,
  businessType = 'app-marketing',
  currency = '$',
  class: className = '',
  ...rest 
} = Astro.props;

const defaultCtaText = businessType === 'app-marketing' ? 'Get Started' : 'Contact Sales';
---

<div class={`py-12 ${className}`} {...rest}>
  <div class="grid gap-8 lg:grid-cols-3 lg:gap-12">
    {tiers.map((tier, index) => (
      <div key={index} class={`relative rounded-2xl border-2 p-8 shadow-lg transition-all hover:shadow-xl ${
        tier.highlighted 
          ? businessType === 'app-marketing'
            ? 'border-blue-500 bg-blue-50'
            : 'border-slate-700 bg-slate-50'
          : 'border-gray-200 bg-white hover:border-gray-300'
      }`}>
        
        {tier.highlighted && (
          <div class={`absolute -top-4 left-1/2 transform -translate-x-1/2 px-4 py-1 rounded-full text-sm font-semibold text-white ${
            businessType === 'app-marketing' ? 'bg-blue-500' : 'bg-slate-700'
          }`}>
            Most Popular
          </div>
        )}

        <div class="text-center mb-8">
          <h3 class={`text-2xl font-bold mb-2 ${
            businessType === 'app-marketing' ? 'text-blue-900' : 'text-slate-900'
          }`}>
            {tier.name}
          </h3>
          
          {tier.description && (
            <p class="text-gray-600 mb-4">{tier.description}</p>
          )}

          <div class="mb-4">
            <span class={`text-4xl font-bold ${
              businessType === 'app-marketing' ? 'text-blue-600' : 'text-slate-800'
            }`}>
              {typeof tier.price === 'number' ? `${currency}${tier.price}` : tier.price}
            </span>
            {tier.period && (
              <span class="text-gray-500 text-lg">/{tier.period}</span>
            )}
          </div>
        </div>

        <ul class="space-y-4 mb-8">
          {tier.features.map((feature, featureIndex) => (
            <li key={featureIndex} class="flex items-start">
              <svg 
                class={`w-5 h-5 mt-0.5 mr-3 flex-shrink-0 ${
                  businessType === 'app-marketing' ? 'text-blue-500' : 'text-emerald-500'
                }`}
                fill="currentColor" 
                viewBox="0 0 20 20"
              >
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
              </svg>
              <span class="text-gray-700">{feature}</span>
            </li>
          ))}
        </ul>

        <div class="mt-auto">
          <a
            href={tier.ctaHref || '#contact'}
            class={`block w-full text-center px-6 py-3 rounded-lg font-semibold transition-colors ${
              tier.highlighted
                ? businessType === 'app-marketing'
                  ? 'bg-blue-600 text-white hover:bg-blue-700'
                  : 'bg-slate-800 text-white hover:bg-slate-900'
                : businessType === 'app-marketing'
                  ? 'bg-blue-100 text-blue-700 hover:bg-blue-200 border border-blue-300'
                  : 'bg-slate-100 text-slate-700 hover:bg-slate-200 border border-slate-300'
            }`}
          >
            {tier.ctaText || defaultCtaText}
          </a>
        </div>
      </div>
    ))}
  </div>

  {businessType === 'consulting' && (
    <div class="text-center mt-8">
      <p class="text-gray-600 mb-4">
        Need a custom solution? We offer tailored consulting packages for enterprise clients.
      </p>
      <a 
        href="#contact" 
        class="inline-flex items-center text-slate-700 hover:text-slate-900 font-medium"
      >
        Contact us for enterprise pricing
        <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </a>
    </div>
  )}
</div>