name: Deploy Preview

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  preview:
    name: Deploy Preview to Vercel
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        id: vercel-deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: '--meta pr=${{ github.event.pull_request.number }}'
          working-directory: ./

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = '${{ steps.vercel-deploy.outputs.preview-url }}';
            const prNumber = context.issue.number;

            const comment = `
            ## 🔍 Preview Deployment

            **Preview URL**: ${deploymentUrl}

            Your changes have been deployed to a preview environment!

            ### Quick Links
            - 🏠 [Homepage](${deploymentUrl})
            - 📝 [Blog](${deploymentUrl}/blog)
            - 📄 [About](${deploymentUrl}/about)
            - 📧 [Contact](${deploymentUrl}/contact)

            ### What's Next?
            - Review the preview
            - Run Lighthouse audit (automatic)
            - Check for visual regressions
            - Request reviews from team members

            ---
            *This preview will be automatically updated with new commits.*
            `;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Preview Deployment')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }

      - name: Create deployment status
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              target_url: '${{ steps.vercel-deploy.outputs.preview-url }}',
              description: 'Preview deployed successfully',
              context: 'Vercel Preview'
            });
