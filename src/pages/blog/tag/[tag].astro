---
import { getCollection } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import Card from '@/components/ui/Card.astro';
import { formatDate } from '@/utils/i18n';

export async function getStaticPaths() {
  const allPosts = await getCollection('blog', ({ data }) => !data.draft);
  const allTags = [...new Set(allPosts.flatMap(post => post.data.tags))];

  return allTags.map(tag => {
    const filteredPosts = allPosts
      .filter(post => post.data.tags.includes(tag))
      .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

    return {
      params: { tag },
      props: { posts: filteredPosts, tag }
    };
  });
}

const { posts, tag } = Astro.props;

const meta = {
  title: `#${tag} | Blog`,
  description: `All articles tagged with #${tag}`
};
---

<BaseLayout meta={meta}>
  <!-- Hero Section -->
  <section class="bg-gradient-to-b from-blue-50 to-white dark:from-gray-900 dark:to-gray-800 py-16">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
      <div class="max-w-3xl mx-auto">
        <!-- Breadcrumbs -->
        <nav class="flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400 mb-8">
          <a href="/" class="hover:text-blue-600 dark:hover:text-blue-400">Home</a>
          <span>/</span>
          <a href="/blog" class="hover:text-blue-600 dark:hover:text-blue-400">Blog</a>
          <span>/</span>
          <span class="text-gray-900 dark:text-white">#{tag}</span>
        </nav>

        <div class="text-center">
          <svg class="w-16 h-16 mx-auto text-blue-600 dark:text-blue-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
          </svg>
          <h1 class="text-4xl sm:text-5xl font-bold text-gray-900 dark:text-white mb-6">
            #{tag}
          </h1>
          <p class="text-xl text-gray-600 dark:text-gray-300">
            {posts.length} {posts.length === 1 ? 'article' : 'articles'} tagged with #{tag}
          </p>
        </div>
      </div>
    </div>
  </section>

  <!-- Posts Grid -->
  <section class="py-16 bg-white dark:bg-gray-800">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
      {posts.length > 0 ? (
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {posts.map((post) => (
            <a
              href={`/blog/${post.id.replace(/\.md$/, '')}`}
              class="group block"
            >
              <Card class="h-full hover:shadow-xl transition-shadow">
                {post.data.heroImage && (
                  <div class="mb-4 rounded-lg overflow-hidden">
                    <img
                      src={post.data.heroImage}
                      alt={post.data.title}
                      class="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300"
                    />
                  </div>
                )}
                <div class="flex items-center gap-2 mb-3">
                  <span class="inline-block px-3 py-1 text-xs font-semibold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900 rounded-full">
                    {post.data.category}
                  </span>
                  {post.data.readingTime && (
                    <span class="text-sm text-gray-500 dark:text-gray-400">
                      {post.data.readingTime} min read
                    </span>
                  )}
                </div>
                <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-2 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
                  {post.data.title}
                </h3>
                <p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">
                  {post.data.description}
                </p>
                <div class="flex items-center justify-between text-sm text-gray-500 dark:text-gray-400">
                  <span>{post.data.author}</span>
                  <time datetime={post.data.pubDate.toISOString()}>
                    {formatDate(post.data.pubDate, 'en')}
                  </time>
                </div>
                {post.data.tags.length > 1 && (
                  <div class="mt-4 flex flex-wrap gap-2">
                    {post.data.tags.filter(t => t !== tag).slice(0, 3).map(tagItem => (
                      <span class="text-xs text-gray-500 dark:text-gray-400">
                        #{tagItem}
                      </span>
                    ))}
                  </div>
                )}
              </Card>
            </a>
          ))}
        </div>
      ) : (
        <div class="text-center py-12">
          <p class="text-gray-600 dark:text-gray-400 text-lg">
            No articles found with this tag.
          </p>
        </div>
      )}
    </div>
  </section>

  <!-- Back to Blog -->
  <section class="py-16 bg-gray-50 dark:bg-gray-900">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <a
        href="/blog"
        class="inline-flex items-center gap-2 px-6 py-3 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition-colors"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
        </svg>
        View All Articles
      </a>
    </div>
  </section>
</BaseLayout>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
