---
export interface Props {
  title?: string;
  description?: string;
  href?: string;
  icon?: string;
  variant?: 'default' | 'feature' | 'service' | 'testimonial';
  businessContext?: 'app-marketing' | 'consulting';
  class?: string;
}

const { 
  title, 
  description, 
  href, 
  icon,
  variant = 'default',
  businessContext = 'app-marketing',
  class: className = '',
  ...rest 
} = Astro.props;

const baseClasses = 'rounded-lg shadow-md transition-all duration-300 hover:shadow-lg';

const variantClasses = {
  default: 'bg-white p-6',
  feature: businessContext === 'app-marketing' 
    ? 'bg-white p-6 hover:bg-blue-50 border border-blue-100' 
    : 'bg-white p-8 hover:bg-slate-50 border border-slate-200',
  service: 'bg-white p-8 hover:bg-slate-50 border-l-4 border-l-blue-600',
  testimonial: 'bg-gray-50 p-6 italic border-l-4 border-l-emerald-500'
};

const titleClasses = businessContext === 'app-marketing'
  ? 'text-xl font-semibold text-gray-900 mb-3'
  : 'text-xl font-bold text-slate-900 mb-4';

const descriptionClasses = businessContext === 'app-marketing'
  ? 'text-gray-600 leading-relaxed'
  : 'text-slate-600 leading-relaxed';

const cardClasses = `${baseClasses} ${variantClasses[variant]} ${className}`;

const CardContent = () => (
  <>
    {icon && (
      <div class={`flex items-center justify-center w-12 h-12 rounded-lg mb-4 ${
        businessContext === 'app-marketing' 
          ? 'bg-blue-100' 
          : 'bg-slate-100'
      }`}>
        <span class="text-2xl">{icon}</span>
      </div>
    )}
    
    {title && (
      <h3 class={titleClasses}>
        {title}
      </h3>
    )}
    
    {description && (
      <p class={descriptionClasses}>
        {description}
      </p>
    )}
    
    <slot />
  </>
);
---

{href ? (
  <a href={href} class={`${cardClasses} block hover:scale-105`} {...rest}>
    <CardContent />
  </a>
) : (
  <div class={cardClasses} {...rest}>
    <CardContent />
  </div>
)}